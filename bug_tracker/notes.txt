feed page: feed=> user complaints, activity stream => bug opened/ closed, milestone opened/closed ...

user screen => user sees a single page that contains a list of previous complaints and a button to add new complaints
                previous complaints can be sorted by closed or open.
                Also a search button for finding bugs

staff tasks => Just a list of tasks, with the accompanying project.
                The admin sees a bug, clicks it and the form that opens up shows a place to add team members
                A team member is assigned as the team lead, they are responsible for updating milestones and adding notes for the user.
                for each team member, the admin assigns tasks, which is what they see in their tasks page.


                - Task will have associated complaint, task title and project

for admin => When a complaint is opened for the first time, it is automatically marked as acknowledged
             and once team member(s) are given it is marked as in progress


=========================================================================================================================
DATABASE DESIGN

All associated [] should be IDs

STAFF
-	Email
-	Password
-	Is Admin
-	Surname
-	First Name
-	Middle Name
-	ID => PK

USER
-	Email => PK
-	Password
-	Surname
-	First Name
-	Middle Name

PROJECT
-	ID => PK
-	Name
-	Details
-	State
-	Date Created
-	Date Closed

COMPLAINT
-	ID => PK
-	Name
-	Notes
-	Associated Project
-	Author
-	Date Created
-	Status
-	Tags

TASK
-	ID => PK
-	Associated Complaint => FK
-	Task Name
-	Task State
-	Due date
-	Associated Staff => FK
-	Is Team Lead

FILES
-   id auto increment serial => PK
-   File name
-	File path
-	Associated Complaint => FK

STAFF NOTE
-	Note
-	Associated Complaint => FK
-	Likely auto increment ID to sort by when retrieving => PK

CALENDAR EVENTS
-	Associated staff => FK
-	Date
-	Event title
-   auto increment serial => PK

CONVERSATIONS :
-   Conversation ID => PK auto increment serial
-   Title

CONVERSATION PARTICIPANTS Table:
-   id => PK auto increment
-   Conversation ID => FK
-   Staff ID => FK


MESSAGES:
-   Message ID => PK (auto-increment)
-   Conversation ID => FK
-   Staff ID => FK
-   Message
-   Time created


 for the homepage, when the page is stepped into and rebuilt
 i.e not showing as a result of a navigator.pop
 the load complaint source function is called which populated the complaints source
 used for building all bugs.
 This is ok because any new complaint will show at that time and we do not desire real time updates
 and no mutable value is shown on the bug preview lite card
 when the bug detail page is shown,
 The same concept applies to related files but as a function
 that is built everytime the page is rebuilt

 //===========
 As for the status, it is mutable since it is updated automatically
 after viewing and after assigning tasks and staff.
 Therefore the status should be update in a format that raises a notification
 best done in a changeNotifier that has the function to update the complaint status and notify.
 listeners to rebuild themselves.
 The status itself should be a future builder that depends on a Future returning status
 //============





//EMAILS AND PASSWORDS

//=======ADMIN
// johnpaul@gmail.com, 123456

//=======STAFF
//kimsoomin@gmail.com, 123456

//=======USER
// ejohnson@gmail.com, 123456

